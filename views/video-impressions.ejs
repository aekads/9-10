<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Video Impressions</title>
  <style>
    table {
      width: 100%;
      border-collapse: collapse;
    }
    th, td {
      border: 1px solid #ddd;
      padding: 8px;
      text-align: left;
    }
    th {
      background-color: #f4f4f4;
    }
    select {
      padding: 5px;
      margin-bottom: 10px;
    }
  </style>
</head>
<body>
  <h1>Video Impressions</h1>

  <!-- Dropdown for selecting name -->
  <label for="nameFilter">Select Name:</label>
  <select id="nameFilter">
    <option value="">--Select Name--</option>
    <% const uniqueNames = [...new Set(data.map(row => row.name))]; %>
    <% uniqueNames.forEach(name => { %>
      <option value="<%= name %>"><%= name %></option>
    <% }) %>
  </select>

  <table>
    <thead>
      <tr>
        <th>ID</th>
        <th>Type</th>
        <th>Video ID</th>
        <th>Screen ID</th>
        <th>Device ID</th>
        <th>Name</th>
        <th>Count</th>
        <th>Duration</th>
        <th>Timestamp</th>
        <th>Uploaded Time Timestamp</th>
        <th>Video Tag</th>
        <th>Uploaded Date</th>
      </tr>
    </thead>
    <tbody id="tableBody">
      <!-- Data will be dynamically inserted here -->
    </tbody>
  </table>

  <script>
    // Function to filter and display data
    const data = `<%- JSON.stringify(data) %>`; // Use <%- instead of <%= to output raw JSON
    const nameFilter = document.getElementById('nameFilter');
    const tableBody = document.getElementById('tableBody');

    nameFilter.addEventListener('change', function() {
      const selectedName = nameFilter.value;
      const filteredData = selectedName ? data.filter(row => row.name === selectedName) : data;

      // Group data by screen_id
      const groupedData = filteredData.reduce((acc, row) => {
        if (!acc[row.screen_id]) {
          acc[row.screen_id] = [];
        }
        acc[row.screen_id].push(row);
        return acc;
      }, {});

      // Clear previous table data
      tableBody.innerHTML = '';

      // Render grouped data
      Object.keys(groupedData).forEach(screen_id => {
        const screenData = groupedData[screen_id];
        let nameCount = {}; // To keep track of name count for each screen_id

        screenData.forEach(row => {
          nameCount[row.name] = (nameCount[row.name] || 0) + 1;
        });

        // Render rows for this screen_id
        screenData.forEach(row => {
          const tr = document.createElement('tr');
          tr.innerHTML = `
            <td>${row.id}</td>
            <td>${row.type}</td>
            <td>${row.video_id}</td>
            <td>${row.screen_id}</td>
            <td>${row.device_id}</td>
            <td>${row.name}</td>
            <td>${nameCount[row.name]}</td>
            <td>${row.duration}</td>
            <td>${row.timestamp}</td>
            <td>${row.uploaded_time_timestamp}</td>
            <td>${row.video_tag}</td>
            <td>${row.uploaded_date}</td>
          `;
          tableBody.appendChild(tr);
        });
      });
    });
  </script>
</body>
</html>
