<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Video Impressions</title>
  <style>
    table {
      width: 100%;
      border-collapse: collapse;
    }
    th, td {
      border: 1px solid #ddd;
      padding: 8px;
      text-align: left;
    }
    th {
      background-color: #f4f4f4;
    }
    .controls {
      margin-bottom: 15px;
    }
    .controls label {
      margin-right: 10px;
    }
    .controls input, .controls select {
      margin-right: 15px;
    }
  </style>
</head>
<body>
  <h1>Video Impressions</h1>

  <div class="controls">
    <label for="nameFilter">Filter by Name:</label>
    <select id="nameFilter">
      <option value="all">All</option>
      <% 
        const uniqueNames = [...new Set(data.map(row => row.name))];
        uniqueNames.forEach(name => { 
      %>
        <option value="<%= name %>"><%= name %></option>
      <% }) %>
    </select>

    <label for="fromDate">From:</label>
    <input type="date" id="fromDate">

    <label for="toDate">To:</label>
    <input type="date" id="toDate">
  </div>

  <table>
    <thead>
      <tr>
        <th>ID</th>
        <th>Screen ID</th>
        <th>Screen Name</th>
        <th>property Name</th>
        <th>Name</th>
        <th>Count</th>
        <th>Uploaded Date</th>
      </tr>
    </thead>
    <tbody id="tableBody">
      <% 
        const groupedData = data.reduce((acc, row) => {
          const key = `${row.name}-${row.screen_id}-${row.uploaded_date}`;
          if (!acc[key]) {
            acc[key] = { ...row, count: parseInt(row.count, 10) };
          } else {
            acc[key].count += parseInt(row.count, 10);
          }
          return acc;
        }, {});
        
        Object.values(groupedData).forEach(row => { 
      %>
        <tr data-name="<%= row.name %>" data-screen-id="<%= row.screen_id %>" data-uploaded-date="<%= row.uploaded_date %>">
          <td><%= row.id %></td>
          <td><%= row.screen_id %></td>
          <td><%= row.screenname %></td>
          <td><%= row.area %></td>
          <td><%= row.name %></td>
          <td><%= row.count %></td>
          <td><%= row.uploaded_date %></td>
        </tr>
      <% }) %>
    </tbody>
  </table>

  <script>
    const nameFilter = document.getElementById('nameFilter');
    const fromDate = document.getElementById('fromDate');
    const toDate = document.getElementById('toDate');
    const tableBody = document.getElementById('tableBody');
    const rows = Array.from(tableBody.querySelectorAll('tr'));

    function applyFilters() {
      const selectedName = nameFilter.value;
      const fromDateValue = fromDate.value;
      const toDateValue = toDate.value;

      rows.forEach(row => {
        const rowName = row.dataset.name;
        const rowDate = row.dataset.uploadedDate;
        const showByName = selectedName === 'all' || rowName === selectedName;
        const showByDate = (!fromDateValue || new Date(rowDate) >= new Date(fromDateValue)) &&
                           (!toDateValue || new Date(rowDate) <= new Date(toDateValue));

        row.style.display = showByName && showByDate ? '' : 'none';
      });
    }

    nameFilter.addEventListener('change', applyFilters);
    fromDate.addEventListener('input', applyFilters);
    toDate.addEventListener('input', applyFilters);
  </script>
</body>
</html>
